web_PO_vi:
1、编写登录功能的自动化测试用例；
2、运用PO模式；
3、分层设计：页面对象和测试用例进行分离；


web_PO_v2:
1、引入单元测试框架；
2、优化分层设计：页面对象、测试用例、测试数据。测试用例层，调用页面对象和测试数据；
3、测试数据层：一个用例一个测试文件；
4、完成登录功能的测试用例编写和调试；
5、关于用例调用的先后顺序说明。


web_PO_v3:
1、添加日志模块-在整个框架中引入日志功能；
2、完成投资模块的自动化测试用例编写；
3、添加了main.py文件，只要运行此文件，就会加载所有测试并生成测试报告和日志；
4、等待方法的添加-凡是因为某一个操作引起的页面的内容发生变化，都需要加入等待操作，以确保下面操作正常进行；
5、自动化的意义在哪里？


web_PO_v4:
1、优化PageObjects模块，提取公共操作的方法到BasePages中；
2、日志模块的优化：添加截图、异常捕获；
3、pytest:
1)、测试用例管理、log
2）、同样可以生成heml的测试报告，xml测试报告、log
3）、fixture



